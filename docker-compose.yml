version: '3.8'

services:
  # Base de datos PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: inia-database
    environment:
      POSTGRES_DB: Inia
      POSTGRES_USER: inia_user
      POSTGRES_PASSWORD: inia_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - inia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inia_user -d Inia"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: inia-backend
    environment:
      # Variables de base de datos
      DB_USER: inia_user
      DB_PASS: inia_password
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/Inia
      
      # Variables JWT
      JWT_SECRET: your_jwt_secret_here_change_in_production
      JWT_EXPIRATION: 86400000
      
      # Configuración de la aplicación
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      
      # URL del middleware
      PYTHON_MIDDLEWARE_BASE_URL: http://middleware:9099
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - inia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/Inia/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Middleware Python/FastAPI
  middleware:
    build:
      context: .
      dockerfile: Dockerfile.middleware
    container_name: inia-middleware
    environment:
      # Variables de base de datos
      DATABASE_URL: postgresql://inia_user:inia_password@database:5432/Inia
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "9099:9099"
    volumes:
      - ./middleware/exports:/app/exports
    networks:
      - inia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Angular con Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inia-frontend
    depends_on:
      - backend
      - middleware
    ports:
      - "80:80"
    networks:
      - inia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Volúmenes persistentes
volumes:
  postgres_data:
    driver: local

# Red personalizada
networks:
  inia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
